<tcccp:Item xmlns:tcccp="http://www.tridion.com/ContentManager/5.2/ImportExport" xmlns:tcm="http://www.tridion.com/ContentManager/5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <tcccp:PrimaryBlueprintParentUrl />
  <tcccp:BlueprintParentUrl />
  <tcccp:BinaryFileLocation />
  <tcm:Data xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
    <tcm:Title>Key Value Pair - Rich Text</tcm:Title>
    <tcm:Description>Key Value Pair - Rich Text</tcm:Description>
    <tcm:Purpose>Embedded</tcm:Purpose>
    <tcm:NamespaceURI />
    <tcm:RootElementName>keyValuePair</tcm:RootElementName>
    <tcm:IsTridionWebSchema>true</tcm:IsTridionWebSchema>
    <tcm:XSD>
      <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tcmi="http://www.tridion.com/ContentManager/5.0/Instance" xmlns="" elementFormDefault="qualified">
        <xsd:import namespace="http://www.tridion.com/ContentManager/5.0/Instance" schemaLocation="/webdav/cm_xml_inst.xsd" />
        <xsd:annotation>
          <xsd:appinfo>
            <tcm:Labels xmlns:tcm="http://www.tridion.com/ContentManager/5.0">
              <tcm:Label ElementName="key" Metadata="false">Key</tcm:Label>
              <tcm:Label ElementName="value" Metadata="false">Value</tcm:Label>
            </tcm:Labels>
          </xsd:appinfo>
        </xsd:annotation>
        <xsd:complexType name="keyValuePair">
          <xsd:sequence>
            <xsd:element name="key" minOccurs="0" maxOccurs="1" type="tcmi:XHTML">
              <xsd:annotation>
                <xsd:appinfo>
                  <ExtensionXml xmlns="http://www.tridion.com/ContentManager/5.0" />
                  <tcm:Size xmlns:tcm="http://www.tridion.com/ContentManager/5.0">3</tcm:Size>
                  <tcm:FilterXSLT xmlns:tcm="http://www.tridion.com/ContentManager/5.0">
                    <stylesheet xmlns="http://www.w3.org/1999/XSL/Transform" version="1.0">
                      <output omit-xml-declaration="yes" method="xml" cdata-section-elements="script" />
                      <template name="FormattingFeatures">
                        <FormattingFeatures xmlns="http://www.tridion.com/ContentManager/5.2/FormatArea" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <Doctype>Transitional</Doctype>
                          <AccessibilityLevel>0</AccessibilityLevel>
                          <DisallowedActions />
                          <DisallowedStyles />
                        </FormattingFeatures>
                      </template>
                      <template match="/ | node() | @*">
                        <copy>
                          <apply-templates select="node() | @*" />
                        </copy>
                      </template>
                      <template match="*[      (self::br or self::p or self::div)     and      normalize-space(translate(., ' ', '')) = ''     and      not(@*)     and      not(processing-instruction())     and      not(comment())     and      not(*[not(self::br) or @* or * or node()])     and      not(following::node()[not(         (self::text() or self::br or self::p or self::div)        and         normalize-space(translate(., ' ', '')) = ''        and         not(@*)        and         not(processing-instruction())        and         not(comment())        and         not(*[not(self::br) or @* or * or node()])       )])     ]">
                        <!-- ignore all paragraphs and line-breaks at the end that have nothing but (non-breaking) spaces and line breaks -->
                      </template>
                      <template match="br[parent::div and not(preceding-sibling::node()) and not(following-sibling::node())]">
                        <!-- Chrome generates <div><br/></div>. Renders differently in different browsers. Replace it with a non-breaking space -->
                        <text> </text>
                      </template>
                    </stylesheet>
                  </tcm:FilterXSLT>
                </xsd:appinfo>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="value" minOccurs="0" maxOccurs="1" type="tcmi:XHTML">
              <xsd:annotation>
                <xsd:appinfo>
                  <ExtensionXml xmlns="http://www.tridion.com/ContentManager/5.0" />
                  <tcm:Size xmlns:tcm="http://www.tridion.com/ContentManager/5.0">3</tcm:Size>
                  <tcm:FilterXSLT xmlns:tcm="http://www.tridion.com/ContentManager/5.0">
                    <stylesheet xmlns="http://www.w3.org/1999/XSL/Transform" version="1.0">
                      <output omit-xml-declaration="yes" method="xml" cdata-section-elements="script" />
                      <template name="FormattingFeatures">
                        <FormattingFeatures xmlns="http://www.tridion.com/ContentManager/5.2/FormatArea" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                          <Doctype>Transitional</Doctype>
                          <AccessibilityLevel>0</AccessibilityLevel>
                          <DisallowedActions />
                          <DisallowedStyles />
                        </FormattingFeatures>
                      </template>
                      <template match="/ | node() | @*">
                        <copy>
                          <apply-templates select="node() | @*" />
                        </copy>
                      </template>
                      <template match="*[      (self::br or self::p or self::div)     and      normalize-space(translate(., ' ', '')) = ''     and      not(@*)     and      not(processing-instruction())     and      not(comment())     and      not(*[not(self::br) or @* or * or node()])     and      not(following::node()[not(         (self::text() or self::br or self::p or self::div)        and         normalize-space(translate(., ' ', '')) = ''        and         not(@*)        and         not(processing-instruction())        and         not(comment())        and         not(*[not(self::br) or @* or * or node()])       )])     ]">
                        <!-- ignore all paragraphs and line-breaks at the end that have nothing but (non-breaking) spaces and line breaks -->
                      </template>
                      <template match="br[parent::div and not(preceding-sibling::node()) and not(following-sibling::node())]">
                        <!-- Chrome generates <div><br/></div>. Renders differently in different browsers. Replace it with a non-breaking space -->
                        <text> </text>
                      </template>
                    </stylesheet>
                  </tcm:FilterXSLT>
                </xsd:appinfo>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:schema>
    </tcm:XSD>
    <tcm:AllowedMultimediaTypes />
    <tcm:ComponentProcess xlink:type="simple" xlink:title="" xlink:href="tcm:0-0-0" />
    <tcm:BundleProcess xlink:type="simple" xlink:title="" xlink:href="tcm:0-0-0" />
    <tcm:DeleteBundleOnProcessFinished>false</tcm:DeleteBundleOnProcessFinished>
  </tcm:Data>
  <tcccp:Dependencies>
    <tcccp:Dependency dependencyType="Publication" itemType="Publication" xpath="" mandatory="true" itemUrl="/webdav/010%20Schemas%20and%20Categories" />
    <tcccp:Dependency dependencyType="OrganizationalItemFolder" itemType="Folder" xpath="" mandatory="true" itemUrl="/webdav/010%20Schemas%20and%20Categories/Building%20Blocks/System/Schemas/Embeddable%20Schemas" />
    <tcccp:Dependency dependencyType="ComponentProcess" itemType="ProcessDefinition" xpath="tcm:Data/tcm:ComponentProcess/@xlink:href" mandatory="true" itemUrl="tcm:0-0-0" />
    <tcccp:Dependency dependencyType="SchemaBundleProcess" itemType="ProcessDefinition" xpath="tcm:Data/tcm:BundleProcess/@xlink:href" mandatory="true" itemUrl="tcm:0-0-0" />
  </tcccp:Dependencies>
</tcccp:Item>